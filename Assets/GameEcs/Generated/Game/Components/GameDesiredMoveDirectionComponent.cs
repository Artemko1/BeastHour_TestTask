//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public DesiredMoveDirectionComponent desiredMoveDirection { get { return (DesiredMoveDirectionComponent)GetComponent(GameComponentsLookup.DesiredMoveDirection); } }
    public bool hasDesiredMoveDirection { get { return HasComponent(GameComponentsLookup.DesiredMoveDirection); } }

    public void AddDesiredMoveDirection(UnityEngine.Vector2 newValue) {
        var index = GameComponentsLookup.DesiredMoveDirection;
        var component = (DesiredMoveDirectionComponent)CreateComponent(index, typeof(DesiredMoveDirectionComponent));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceDesiredMoveDirection(UnityEngine.Vector2 newValue) {
        var index = GameComponentsLookup.DesiredMoveDirection;
        var component = (DesiredMoveDirectionComponent)CreateComponent(index, typeof(DesiredMoveDirectionComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveDesiredMoveDirection() {
        RemoveComponent(GameComponentsLookup.DesiredMoveDirection);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherDesiredMoveDirection;

    public static Entitas.IMatcher<GameEntity> DesiredMoveDirection {
        get {
            if (_matcherDesiredMoveDirection == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.DesiredMoveDirection);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherDesiredMoveDirection = matcher;
            }

            return _matcherDesiredMoveDirection;
        }
    }
}
